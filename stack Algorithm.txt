(1)Push (S, Top, Value, MAX)
1. [Check for Stack overflow] 
If Top ≥ MAX then Write (‘Stack Overflow’)
Return 
2. [Increment Top]
Top = Top + 1
3. [Insert Element]
S[Top] = Value 
4. [Finished]
Return 
 
 
 
(2)Pop(S, Top) 
1. [Check for underflow on Stack]
If Top = 0 then Write (‘Stack Underflow on Pop’) 
Exit 
2. [Decrement Pointer]
Value = S[Top]
Top = Top-1
3. [Finished]
Return 
 
 
(3)Peep (S, Top, I)
1. [Check for Stack Underflow]
If (Top=-1) then Write (‘Stack is Underflow’)
Exit 
2. [Return Ith element from top of the stack]
Return (S[Top]) 
 
 
(4)Change (S, Top, Value, I)
1. [Check for stack underflow]
If (Top = -1) then Write (‘Stack is Underflow’)
Exit 
2. [Change the Ith element from top of stack]
S[Top] = Value 
3. [Finished]
Return


(5)Display(I,Max)
1.[Check for Empty stack]
If (Top=-1) then write ('Stack is Empty')
exit
2.[Display the all Elements in Stack]
Set I=Top
while(I>= 0) -> write ('S[I]') and I=I-1
return
